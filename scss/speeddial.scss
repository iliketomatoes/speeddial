@import "mixins";

$option-bg: #EEEEEE;
$option-font-color: rgba(#000, .87);

/**
* The only required property for the container is the display property,
* that must be inline-block
*/
.speed-dial {
    display: inline-block;
}

.speed-dial__btn {
    @include round-button();
    // UNCOMMENT THIS LINE IF YOU WANT TO HAVE BOX-SHADOW BY DEFAULT
    // @include material-element(1, 2);
    color: $option-font-color;
    background: $option-bg;
}

.speed-dial__option {
    @include round-button(46px, 19px);
    // UNCOMMENT THIS LINE IF YOU WANT TO HAVE BOX-SHADOW BY DEFAULT
    // @include material-element(1, 2);
    color: $option-font-color;
    background: $option-bg;
}


/**
* A set of modifiers for the container which will effect the button and the
* options
*/
.speed-dial--small {
    .speed-dial__btn {
        min-width: 32px;
        width: 32px;
        height: 32px;
        font-size: 16px;
    }

    .speed-dial__option {
        min-width: 26px;
        width: 26px;
        height: 26px;
        font-size: 12px;
    }
}

.speed-dial--blue {
    .speed-dial__btn {
        background: #2980b9;
        color: rgb(255, 255, 255);
    }
}

.speed-dial--pink {
    .speed-dial__btn {
        background: rgb(255, 64, 129);
        color: rgb(255, 255, 255);
    }
}

.speed-dial--material {
    .speed-dial__btn,
    .speed-dial__option {
        @include material-element(1, 3);
    }
}

/**
* Eventually you can change the speed dial button appearence when
* the list of options is open.
*/
.speed-dial--toggle .speed-dial__list.is-visible {
    & + .speed-dial__btn {
        box-shadow: none !important;
        background: $option-bg !important;
        color: $option-font-color !important;
    }
}

/**
* Below are the main rules for the list of options
*/
.speed-dial__list {
    // Properties dealing with initial state
    visibility: hidden;
    pointer-events: none;
    opacity: 0;
    // Constant properties
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
    -webkit-align-content: stretch;
    -ms-flex-line-pack: stretch;
    align-content: stretch;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    position: absolute;
    margin: 0;
    padding: 0;
    list-style: none;
    li {
        display: inline-block;
        -webkit-order: 0;
        -ms-flex-order: 0;
        order: 0;
        -webkit-flex: 0 1 auto;
        -ms-flex: 0 1 auto;
        flex: 0 1 auto;
        -webkit-align-self: auto;
        -ms-flex-item-align: auto;
        align-self: auto;
    }
}

.speed-dial__option {
    // Initial state for the list of options items
    @include transform(scale(0));
}

/* UP */
.speed-dial--up {

    .speed-dial__list {
        -webkit-flex-direction: column-reverse;
        -ms-flex-direction: column-reverse;
        flex-direction: column-reverse;
    }

    &:not(.speed-dial--small) .speed-dial__list {
        bottom: 100%;
        padding-bottom: 4px;
        left: 5px;

        li {
            margin: 0 0 10px 0;
        }
    }

    &.speed-dial--small .speed-dial__list {
        bottom: 100%;
        padding-bottom: 1px;
        left: 3px;

        li {
            margin: 0 0 9px 0;
        }
    }

}

/* RIGHT */
.speed-dial--right {

    .speed-dial__list {
        -webkit-flex-direction: row;
        -ms-flex-direction: row;
        flex-direction: row;
    }

    &:not(.speed-dial--small) .speed-dial__list {
        bottom: 5px;
        padding-left: 14px;

        li {
            margin: 0 10px 0 0;
        }
    }

    &.speed-dial--small .speed-dial__list {
        bottom: 3px;
        padding-left: 12px;

        li {
            margin: 0 9px 0 0;
        }
    }

}

/* LEFT */
.speed-dial--left {

    .speed-dial__list {
        -webkit-flex-direction: row-reverse;
        -ms-flex-direction: row-reverse;
        flex-direction: row-reverse;
    }

    &:not(.speed-dial--small) .speed-dial__list {
        bottom: 5px;
        padding-right: 14px;

        li {
            margin: 0 0 0 10px;
        }
    }

    &.speed-dial--small .speed-dial__list{
        bottom: 3px;
        padding-right: 12px;

        li {
            margin: 0 0 0 9px;
        }
    }

}

/* DOWN */
.speed-dial--down {

    .speed-dial__list {
        -webkit-flex-direction: column;
        -ms-flex-direction: column;
        flex-direction: column;
    }

    &:not(.speed-dial--small) .speed-dial__list {
        top: 100%;
        left: 5px;
        padding-top: 4px;

        li {
            margin: 10px 0 0 0;
        }
    }

    &.speed-dial--small .speed-dial__list {
        top: 100%;
        left: 3px;
        padding-top: 1px;

        li {
            margin: 9px 0 0 0;
        }
    }

}

/* VISIBLE LIST */
.speed-dial__list.is-visible {
    visibility: visible;
    pointer-events: auto;
    opacity: 1;

    .speed-dial__option {
        -webkit-animation-name: enter;
        animation-name: enter;
        -webkit-animation-fill-mode: forwards;
        animation-fill-mode: forwards;
        -webkit-animation-duration: 0.1s;
        animation-duration: 0.1s;
    }
    li:nth-of-type(1) .speed-dial__option {
        -webkit-animation-delay: 0.1s;
        animation-delay: 0.1s;
    }
    li:nth-of-type(2) .speed-dial__option {
        -webkit-animation-delay: 0.2s;
        animation-delay: 0.2s;
    }
    li:nth-of-type(3) .speed-dial__option {
        -webkit-animation-delay: 0.3s;
        animation-delay: 0.3s;
    }
    li:nth-of-type(4) .speed-dial__option {
        -webkit-animation-delay: 0.4s;
        animation-delay: 0.4s;
    }
    li:nth-of-type(5) .speed-dial__option {
        -webkit-animation-delay: 0.5s;
        animation-delay: 0.5s;
    }
    li:nth-of-type(6) .speed-dial__option {
        -webkit-animation-delay: 0.6s;
        animation-delay: 0.6s;
    }
}

@-webkit-keyframes enter {
    from {
        @include transform(scale(0));
    }
    to {
        @include transform(scale(1));
    }
}

@keyframes enter {
    from {
        @include transform(scale(0));
    }
    to {
        @include transform(scale(1));
    }
}
